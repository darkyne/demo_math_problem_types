#!/bin/python3
# -*- coding: utf-8 -*-

# Ce fichier doit être utilisé pour un exercice de type 'random'

import re
import math
from sympy import sympify, simplify
from sympy.parsing.latex import parse_latex
from inginious import input, feedback, rst

h = 10*int(input.get_input("@random")[0]*10+5)
n = int(input.get_input("@random")[1]*8+3)

correct1 = str(h*(3/4)**n)

grade = 0

def parse_equation(latex_str):
    # The \left and \right prefix are not supported by sympy (and useless for treatmx+90*12*3=3xent)
    latex_str = re.sub("(\\\left|\\\\right)", "", latex_str)
    return parse_latex(latex_str)

def is_equal(eq1, eq2):
    return abs(simplify(eq1) - simplify(eq2)) < 0.05 or abs(simplify(sympify(str(eq1))) - simplify(sympify(str(eq2)))) < 0.05

try:
    student_answer1 = parse_equation(str(input.get_input("q1")[0]))
    correct_answer1 = parse_equation(correct1)
except LaTeXParsingError as e:
    feedback.set_global_result("failed")
    feedback.set_global_feedback("parsing error")

res1 = is_equal(student_answer1, correct_answer1)

if res1:
    feedback.set_problem_result("success","q1")
    feedback.set_problem_feedback("Bravo!","q1")
    grade += 100
else:
    feedback.set_problem_result("failed","q1")
    feedback.set_problem_feedback("Mauvaise réponse.","q1")


feedback.set_grade(grade)
if grade == 100:
    feedback.set_global_result("success")
    bb = "{},{},{},{}".format(-1,
                             1.1*h,
                             n+2,
                             -0.1*h)
    fun = "{}*Math.pow(3/4, n)".format(h)
    feedback.set_problem_feedback(".. raw:: html\n\n\t<div id='jxgbox1' class='jxgbox mb-3' style='width:600px; height:400px;'></div>\n\t<script type='text/javascript'>\n\tvar b = JXG.JSXGraph.initBoard('jxgbox1', {boundingbox: ["+bb+"], axis: true});\n\tb.create('point', [0, "+str(h)+"], {size: 2, name:''});\n\tb.create('functiongraph', [function(x){return -4*"+str(h)+"*(x-(1/2))*(x+(1/2));},0,1/2]);\n\tfor (let n = 1; n < "+str(n)+"+1; n++) {\n\t\tb.create('point', [n, "+fun+"], {size: 2, name:'boinc'});\n\t\tb.create('functiongraph', [function(x){return -4*"+str(h)+"*Math.pow(3/4,n)*(x-n-(1/2))*(x-n+(1/2));},n-(1/2),n+(1/2)]);\n\t}\n\t</script>","q1")
else:
    feedback.set_global_result("failed")
    feedback.set_global_feedback("Une de vos réponses n'est pas correcte")